[{"D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\index.js":"1","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\reportWebVitals.js":"2","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\App.js":"3","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\Navbar.js":"4","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\Bookmarks.js":"5","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\Profile.js":"6","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\Main.js":"7","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\forms\\Login.js":"8","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\forms\\ApplicantForm.js":"9","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\forms\\Register.js":"10","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\forms\\EmployerForm.js":"11","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\forms\\TagSelection.js":"12","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\card\\Card.js":"13","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\data\\data.js":"14","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\card\\Tag.js":"15","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\card\\Buttons.js":"16","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\css\\applicantRegister-script.js":"17"},{"size":550,"mtime":1611517083904,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1611516467447,"results":"20","hashOfConfig":"19"},{"size":1168,"mtime":1611519141067,"results":"21","hashOfConfig":"19"},{"size":852,"mtime":1611517083846,"results":"22","hashOfConfig":"19"},{"size":151,"mtime":1611517083846,"results":"23","hashOfConfig":"19"},{"size":177,"mtime":1611517083847,"results":"24","hashOfConfig":"19"},{"size":1839,"mtime":1611517083846,"results":"25","hashOfConfig":"19"},{"size":4058,"mtime":1611517083849,"results":"26","hashOfConfig":"19"},{"size":4569,"mtime":1611517083848,"results":"27","hashOfConfig":"19"},{"size":314,"mtime":1611517083850,"results":"28","hashOfConfig":"19"},{"size":3019,"mtime":1611517083849,"results":"29","hashOfConfig":"19"},{"size":420,"mtime":1611517083850,"results":"30","hashOfConfig":"19"},{"size":5161,"mtime":1611517083848,"results":"31","hashOfConfig":"19"},{"size":672,"mtime":1611517083901,"results":"32","hashOfConfig":"19"},{"size":365,"mtime":1611517083848,"results":"33","hashOfConfig":"19"},{"size":1458,"mtime":1611517083847,"results":"34","hashOfConfig":"19"},{"size":363,"mtime":1611517083851,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1os0m81",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\index.js",[],"D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\reportWebVitals.js",[],["77","78"],"D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\App.js",["79"],"D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\Navbar.js",[],"D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\Bookmarks.js",[],"D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\Profile.js",[],"D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\Main.js",["80","81","82","83","84","85","86","87","88","89"],"import React, { useState } from 'react'\r\nimport Card from './card/Card'\r\nimport Navbar from './Navbar'\r\nimport facebookImage from '../images/Facebook_Logo.png'\r\nimport Buttons from './card/Buttons'\r\n\r\nfunction Main() {\r\n    const [ currentCard, setCurrentCard ] = useState(1)\r\n    const [ userId, setUserId ] = useState(0)\r\n\r\n    const fetchPostings = async () => {\r\n        const data = await fetch('')\r\n        const postings = await data.json();\r\n        console.log(postings);\r\n    }\r\n\r\n    const handleNotInterested = () => {\r\n        // remove posting from list of data DELETE\r\n        console.log(\"Not interested\")\r\n    }\r\n\r\n    const handleBookmark = () => {\r\n        // add posting to bookmarks POST\r\n        console.log(\"Bookmark\")\r\n    }\r\n\r\n    const handleApply = () => {\r\n        // add posting to applied list/database POST\r\n        console.log(\"Apply\")\r\n    }\r\n\r\n    const style = {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n    }\r\n    return (\r\n        <div className=\"body\">\r\n            <Card key=\"1\"\r\n                jobTitle={\"Full-Stack Developer\"}\r\n                location={\"New York, NY\"}\r\n                description={\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in luctus elit, non efficitur leo. Vestibulum ultricies id turpis sed gravida. Curabitur eget tempus sapien, sit amet vulputate ante. Nam nec quam eget sapien fermentum porttitor. Integer aliquam accumsan semper. Fusce eget est sed nunc mattis sollicitudin. In sed dignissim nisl. In vel ullamcorper purus.\"}\r\n                companyName={\"Facebook\"}\r\n                tags={[\"Algorithms\", \"C++\", \"React\", \"JS\", \"HTML\", \"CSS\"]}\r\n                image={facebookImage}\r\n            />\r\n            <Buttons />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\forms\\Login.js",["90","91","92","93","94","95"],"import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Login() {\r\n    const { register, handleSubmit, errors } = useForm()\r\n    const [ email, setEmail ] = useState(\"\")\r\n    const [ password, setPassword ] = useState(\"\")\r\n\r\n    // const handleChange = event => {\r\n    //     if ( event.target === \"email\" )\r\n    //         setEmail(event.target.value)\r\n    //     else if ( event.target === \"password\" )\r\n    //         setPassword(event.target.value);\r\n    // }\r\n\r\n    const onSubmit = data => {\r\n        console.log(`Email: ${data.email}\\nPassword: ${data.password}`)\r\n    }\r\n    \r\n\r\n    const cardClassName = \"card container w-120 mx-auto px-4 border-4 border-white rounded-lg bg-white shadow-lg\"\r\n    const content1ClassName = \"content p-5\"\r\n    const content2ClassName = \"content p-3\"\r\n    const loginClassName = \"text-lg font-bold mb-4\"\r\n    const inputClassName = \"outline-black w-full my-3 pl-2\"\r\n    const forgotPasswordClassName = \"text-center text-blue-500 hover:text-blue-600 mt-2\"\r\n    const submitClassName = \"ml-auto mr-0 mt-6 block px-4 py-1 rounded bg-blue-300 font-bold cursor-pointer outline-none hover:bg-blue-400 text-blue-800\"\r\n    const noAccountClassName = \"text-center font-bold\"\r\n    const signUpAsClassName = \"text-center mb-3\"\r\n    const linkDivClassName = \"inline-grid grid-cols-4 gap-16 justify-items-center w-full mx-auto\"\r\n    const linkClassName = \"bg-blue-300 box-border h-16 w-24 text-center flex items-center justify-center border-2 rounded border-blue-400 hover:border-blue-500 text-blue-800\"\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"main\">\r\n                <div className={cardClassName} >\r\n                    <div className={content1ClassName} >\r\n                        <h1 className={loginClassName}>\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <label name=\"email\">\r\n                                    Email\r\n                                </label>\r\n                                <input \r\n                                    className={inputClassName}\r\n                                    name=\"email\" \r\n                                    type=\"email\" \r\n                                    ref={register}\r\n                                />\r\n                                <label name=\"password\">\r\n                                    Password: \r\n                                </label>\r\n                                <input \r\n                                    className={inputClassName}\r\n                                    name=\"password\" \r\n                                    type=\"password\" \r\n                                    ref={register}\r\n                                />\r\n                                <p className={forgotPasswordClassName}><a href=\"#\">Forgot password?</a></p> \r\n                                <input className={submitClassName} type=\"submit\" value=\"Login\" />\r\n                            </form>\r\n                        </h1>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className={cardClassName} >\r\n                    <div className={content2ClassName} >\r\n                        <p className={noAccountClassName} >Don't have an account?</p>\r\n                        <p className={signUpAsClassName} >Sign up as a(n) ...</p>\r\n\r\n                        <div className={linkDivClassName} >\r\n                            <div></div>\r\n                            <Link to=\"/employerform\">\r\n                                <div className={linkClassName} >Employer</div>\r\n                            </Link>\r\n                            <Link to=\"/applicantform\">\r\n                                <div className={linkClassName} >Applicant</div>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\forms\\ApplicantForm.js",["96","97","98","99","100","101","102","103"],"import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport labels from '../../data/data'\r\nimport TagSelection from './TagSelection'\r\nimport '../../css/applicantRegister-styles.css'\r\n\r\nfunction ApplicantForm() {\r\n\r\n    // Select job titles that you are interested in (Select @ least one)\r\n    // Select tags that apply to you\r\n\r\n    /*\r\n        Questions to ask applicant:\r\n\r\n        Name\r\n        Type of Job that they want (tags)\r\n        Type of skills they have (tags)\r\n    */\r\n\r\n    const { register, handleSubmit, errors } = useForm()\r\n    const [ fullName ] = useState(\"\")\r\n    const [ email ] = useState(\"\")\r\n    const [ password ] = useState(\"\")\r\n\r\n    const { jobs, skills } = labels;\r\n    // console.log(job);\r\n    // console.log(labels);\r\n    // job.map(\r\n    //     (val) => {\r\n    //         console.log(val)\r\n    //     }\r\n    // )\r\n\r\n    const onSubmit = data => {\r\n        console.log(data)\r\n    }\r\n\r\n    const handleClick = event => {\r\n        console.log(\"clicked\")\r\n    }\r\n    \r\n    const labelButtons = jobs.map(jobLabel => {\r\n        <TagSelection key={jobLabel} handleClick={handleClick}/>\r\n    })\r\n\r\n    const cardClassName = \"card container w-120 mx-auto px-4 border-4 border-white rounded-lg bg-white shadow-lg\"\r\n    const contentClassName = \"content p-5\"\r\n    const headerClassName = \"text-lg font-bold mb-4\"\r\n    const labelClassName = \"outline-black w-full my-3 pl-2\"\r\n    const tagClassName = \"border-2 border-gray-300 rounded-lg bg-gray-300 px-2 py-0.5 mr-2 inline-block my-3 pl-2 shadow-sm hover:bg-gray-300 hover:border-blue-400 focus:outline-none\"\r\n    return (\r\n        // <div className=\"body\">\r\n            <div className=\"main\">\r\n                <div className={cardClassName}>\r\n                    <div className={contentClassName}>\r\n                        <h1 className={headerClassName}>Sign Up Information</h1>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                            <label className=\"text-left\">Full Name</label>\r\n                                <input \r\n                                    className={labelClassName}\r\n                                    name=\"fullName\"\r\n                                    type=\"text\"\r\n                                    ref={register}\r\n                                    placeholder=\"Enter Full Name\"\r\n                                />\r\n                            <label>\r\n                                Email:\r\n                                <input \r\n                                    className={labelClassName}\r\n                                    name=\"email\"\r\n                                    type=\"text\"\r\n                                    ref={register}\r\n                                    placeholder=\"Enter Email\"\r\n                                />\r\n                            </label>\r\n                            <label>\r\n                                Password:\r\n                                <input \r\n                                    className={labelClassName}\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    ref={register}\r\n                                    placeholder=\"Enter Password\"\r\n                                />\r\n                            </label>\r\n                            <br/>\r\n                            <label>\r\n                                Job Tags\r\n                                Select job titles that interest you:\r\n                                {jobs.map(item => <TagSelection name={item}/>)}\r\n                            </label>\r\n                            <br/>\r\n                            <label>\r\n                                Education\r\n                                <input name=\"education\" type=\"text\" ref={register} class={labelClassName} placeholder=\"Enter Education\" />\r\n                            </label>\r\n                            <label>\r\n                                Major\r\n                                <input name=\"major\" type=\"text\" ref={register} class={labelClassName} placeholder=\"Enter Major\" />\r\n                            </label>\r\n                            <input name=\"GPA\" type=\"number\" ref={register} step=\".01\" max=\"4.00\" class={labelClassName} placeholder=\"Enter GPA\" />\r\n                            <input type=\"submit\" value=\"Submit\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default ApplicantForm","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\forms\\Register.js",[],"D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\forms\\EmployerForm.js",["104"],"import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nfunction EmployerForm() {\r\n    const {register, handleSubmit, errors } = useForm()\r\n    // Select tags that are applicable to this posting\r\n\r\n    /*\r\n        Questions to ask Employer:\r\n\r\n        Company Name\r\n        Company Logo\r\n        Job Title\r\n        Location\r\n        [Date Posted, current Date]\r\n        Description of Job\r\n        Type of Job this applies to (tags)\r\n        Type of skills this job requires (tags)\r\n    */\r\n   const onSubmit = data => {\r\n       console.log(data)\r\n   }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"main\">\r\n                <div className=\"card container w-120 mx-auto px-4 border-4 border-white rounded-lg bg-white shadow-lg\">\r\n                    <div className=\"content p-5\">\r\n                        <h1 className=\"text-lg font-bold mb-4\">Company Sign Up Information</h1>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <label>Company Name</label>\r\n                            <input name=\"companyName\" type=\"text\" ref={register} className=\"outline-black w-full my-3 pl-2\" />\r\n\r\n                            <label>Company Email</label>\r\n                            <input name=\"email\" type=\"text\" ref={register} className=\"outline-black w-full my-3 pl-2\" />\r\n                            \r\n                            <label>Password</label>\r\n                            <input name=\"password\" type=\"password\" ref={register} className=\"outline-black w-full my-3 pl-2\" />\r\n                            \r\n                            <label>Location</label>\r\n\r\n                            <input name=\"location\" type=\"text\" ref={register} className=\"outline-black w-full my-3 pl-2\"  />\r\n                            \r\n                            <label>Employment Type</label>\r\n                            <input name=\"employmentType\" type=\"text\" ref={register} className=\"outline-black w-full my-3 pl-2\" />\r\n\r\n                            <label>Job Position(s)* <br /></label>\r\n                            <button id=\"tg-positions\" className=\"border-2 border-gray-300 rounded-lg bg-gray-300 px-2 py-0.5 mr-2 inline-block my-3 pl-2 shadow-sm hover:bg-gray-300 hover:border-blue-400 focus:outline-none\">Full Stack Developer</button>\r\n\r\n                            <label><br /><br />Qualification Tags* <br /></label>\r\n                            <button id=\"tg-qualifications\" className=\"border-2 border-gray-300 rounded-lg bg-gray-300 px-2 py-0.5 mr-2 inline-block my-3 pl-2 shadow-sm hover:bg-gray-300 hover:border-blue-400 focus:outline-none\">Python</button>\r\n\r\n                            <input type=\"submit\" value=\"Next\" className=\"ml-auto mr-0 mt-8 block px-4 py-1 rounded bg-blue-300 font-bold cursor-pointer outline-none hover:bg-blue-400 text-blue-800\" />\r\n                        </form>                \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployerForm","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\forms\\TagSelection.js",[],"D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\card\\Card.js",["105","106","107","108","109","110"],"import React, { useState } from 'react'\r\nimport Tag from './Tag'\r\nfunction Card(props) {\r\n    const [ image ] = useState(props.image)\r\n    const [ jobTitle, setJobTitle ] = useState(props.jobTitle)\r\n    const [ location, setLocation ] = useState(props.location)\r\n    const [ companyName ] = useState(props.companyName)\r\n    const [ description, setDescription ] = useState(props.description)\r\n    const [ datePosted, setDatePosted ] = useState(props.datePosted)\r\n    const [ tags, setTags ] = useState(props.tags)\r\n\r\n\r\n    // styles\r\n    const cardClassName = \"card container w-120 mx-auto px-4 border-4 border-white rounded-lg bg-white shadow-lg\"\r\n    const contentClassName = \"content p-5\"\r\n    const logoClassName = \"logo w-72 mx-auto p-5\"\r\n    const companyNameClassName = \"companyName text-center font-bold text-xl\"\r\n    const jobTitleClassName = \"jobTitle text-lg\"\r\n    const locationClassName = \"location text-gray-500 text-sm mb-2\"\r\n    const descriptionClassName = \"description text-sm mb-1\"\r\n    const datePostedClassName = \"datePosted text-gray-500 mb-3 text-sm\"\r\n    const tagSpanClassName = \"border-4 border-gray-300 rounded-lg bg-gray-300 px-1 mr-2 inline-block mb-2 shadow-sm\"\r\n\r\n\r\n    return (\r\n        <div className={cardClassName}>\r\n            <div className={contentClassName}>\r\n\r\n                <div className={logoClassName}><img src={image} alt={companyName} /> {/* Make alt the first name of company name*/}</div>\r\n                <div className={companyNameClassName}>{companyName}</div>\r\n                <div className={jobTitleClassName}>{jobTitle}</div>\r\n                <div className={locationClassName}>{location}</div>\r\n                <div className={descriptionClassName}>{description}</div>\r\n                <div className={datePostedClassName}>{datePosted}</div>\r\n                <div className=\"tags\">{tags.map(\r\n                    (val) => {\r\n                        return <Tag key={val} tag={val}/>\r\n                    }\r\n                )}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n\r\n\r\n// <!DOCTYPE html>\r\n// <html lang=\"en\">\r\n// <head>\r\n//     <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\r\n//     <link href=\"https://fonts.googleapis.com/css2?family=Rancho&display=swap\" rel=\"stylesheet\"> \r\n//     <meta charset=\"UTF-8\">\r\n//     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n//     <title>Job Postings</title>\r\n//     <link rel=\"stylesheet\" href=\"card-styles.css\">\r\n//     <link rel=\"stylesheet\" href=\"tailwind.css\">\r\n// </head>\r\n// <body style=\"position:absolute; top:50%; left:50%; transform: translate(-50%, -50%);\">\r\n//     <div class=\"main\">\r\n//         <div class=\"card container w-120 mx-auto px-4 border-4 border-white rounded-lg bg-white shadow-lg\">\r\n//             <div class=\"content p-5\">\r\n//                 <div class=\"logo w-72 mx-auto p-5\"><img src=\"/Images/Facebook_Logo.png\"></div>\r\n//                 <div class=\"companyName text-center font-bold text-xl\">Facebook</div>\r\n//                 <div class=\"jobTitle text-lg\">Software Engineering Developer</div>\r\n//                 <div class=\"location text-gray-500 text-sm mb-2\">New York, NY</div>\r\n//                 <div class=\"description text-sm mb-1\">\r\n//                     Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi in luctus elit, non efficitur leo. Vestibulum ultricies id turpis sed gravida. Curabitur eget tempus sapien, sit amet vulputate ante. Nam nec quam eget sapien fermentum porttitor. Integer aliquam accumsan semper. Fusce eget est sed nunc mattis sollicitudin. In sed dignissim nisl. In vel ullamcorper purus.\r\n//                 </div>\r\n//                 <div class=\"datePosted text-gray-500 mb-3 text-sm\">5 days ago</div>\r\n//                 <div class=\"tags\">\r\n//                     <span class=\"border-4 border-gray-300 rounded-lg bg-gray-300 px-1 mr-2 inline-block mb-2 shadow-sm\">Python</span>\r\n//                     <span class=\"border-4 border-gray-300 rounded-lg bg-gray-300 px-1 mr-2 inline-block mb-2 shadow-sm\">Java</span>\r\n//                 </div>\r\n                \r\n//             </div>\r\n//         </div>\r\n\r\n//         <div class=\"buttons inline-grid grid-cols-3 justify-items-center w-120 mx-auto mt-10\">\r\n//             <button class=\"notInterestedBtn flex items-center justify-center bg-red-500 hover:bg-red-600 py-2 px-4 w-20 h-20 text-center font-bold text-4xl rounded-full text-white shadow-lg focus:outline-none\" style=\"font-family: 'Rancho', cursive;\">X</button>\r\n\r\n//             <button class=\"bookmarkBtn flex items-center justify-center bg-gray-100 hover:bg-gray-200 w-20 h-20 text-center font-bold text-4xl rounded-full shadow-lg focus:outline-none\" style=\"font-family: 'Rancho', cursive;\">\r\n//                 <img class=\"w-6\"src=\"Images/Bookmark.png\">\r\n//             </button>\r\n\r\n//             <button class=\"applyBtn flex items-center justify-center bg-green-500 hover:bg-green-600 py-2 px-4 w-20 h-20 text-center font-bold text-4xl rounded-full text-white shadow-lg focus:outline-none\" style=\"font-family: 'Rancho', cursive;\">✓</button>\r\n//         </div>\r\n//     </div>\r\n// </body>\r\n// </html>","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\data\\data.js",[],"D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\card\\Tag.js",["111"],"import React, { useState } from 'react'\r\n\r\nfunction Tag(props) {\r\n    const [ tag, setTag ] = useState(props.tag)\r\n    const tagClassName = \"border-4 border-gray-300 rounded-lg bg-gray-300 px-1 mr-2 inline-block mb-2 shadow-sm\"\r\n    return (\r\n        <>\r\n        \r\n            <span className={tagClassName}>{tag}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tag","D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\components\\card\\Buttons.js",[],"D:\\Coding\\PersonalProjects\\cuny-hackathon\\src\\css\\applicantRegister-script.js",["112"],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":12},{"ruleId":"117","severity":1,"message":"121","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":14},{"ruleId":"117","severity":1,"message":"122","line":8,"column":13,"nodeType":"119","messageId":"120","endLine":8,"endColumn":24},{"ruleId":"117","severity":1,"message":"123","line":8,"column":26,"nodeType":"119","messageId":"120","endLine":8,"endColumn":40},{"ruleId":"117","severity":1,"message":"124","line":9,"column":13,"nodeType":"119","messageId":"120","endLine":9,"endColumn":19},{"ruleId":"117","severity":1,"message":"125","line":9,"column":21,"nodeType":"119","messageId":"120","endLine":9,"endColumn":30},{"ruleId":"117","severity":1,"message":"126","line":11,"column":11,"nodeType":"119","messageId":"120","endLine":11,"endColumn":24},{"ruleId":"117","severity":1,"message":"127","line":17,"column":11,"nodeType":"119","messageId":"120","endLine":17,"endColumn":30},{"ruleId":"117","severity":1,"message":"128","line":22,"column":11,"nodeType":"119","messageId":"120","endLine":22,"endColumn":25},{"ruleId":"117","severity":1,"message":"129","line":27,"column":11,"nodeType":"119","messageId":"120","endLine":27,"endColumn":22},{"ruleId":"117","severity":1,"message":"130","line":32,"column":11,"nodeType":"119","messageId":"120","endLine":32,"endColumn":16},{"ruleId":"117","severity":1,"message":"131","line":7,"column":37,"nodeType":"119","messageId":"120","endLine":7,"endColumn":43},{"ruleId":"117","severity":1,"message":"132","line":8,"column":13,"nodeType":"119","messageId":"120","endLine":8,"endColumn":18},{"ruleId":"117","severity":1,"message":"133","line":8,"column":20,"nodeType":"119","messageId":"120","endLine":8,"endColumn":28},{"ruleId":"117","severity":1,"message":"134","line":9,"column":13,"nodeType":"119","messageId":"120","endLine":9,"endColumn":21},{"ruleId":"117","severity":1,"message":"135","line":9,"column":23,"nodeType":"119","messageId":"120","endLine":9,"endColumn":34},{"ruleId":"136","severity":1,"message":"137","line":60,"column":72,"nodeType":"138","endLine":60,"endColumn":84},{"ruleId":"117","severity":1,"message":"131","line":20,"column":37,"nodeType":"119","messageId":"120","endLine":20,"endColumn":43},{"ruleId":"117","severity":1,"message":"139","line":21,"column":13,"nodeType":"119","messageId":"120","endLine":21,"endColumn":21},{"ruleId":"117","severity":1,"message":"132","line":22,"column":13,"nodeType":"119","messageId":"120","endLine":22,"endColumn":18},{"ruleId":"117","severity":1,"message":"134","line":23,"column":13,"nodeType":"119","messageId":"120","endLine":23,"endColumn":21},{"ruleId":"117","severity":1,"message":"140","line":25,"column":19,"nodeType":"119","messageId":"120","endLine":25,"endColumn":25},{"ruleId":"117","severity":1,"message":"141","line":42,"column":11,"nodeType":"119","messageId":"120","endLine":42,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":42,"column":44,"nodeType":"144","messageId":"145","endLine":42,"endColumn":46},{"ruleId":"117","severity":1,"message":"146","line":50,"column":11,"nodeType":"119","messageId":"120","endLine":50,"endColumn":23},{"ruleId":"117","severity":1,"message":"131","line":5,"column":36,"nodeType":"119","messageId":"120","endLine":5,"endColumn":42},{"ruleId":"117","severity":1,"message":"147","line":5,"column":23,"nodeType":"119","messageId":"120","endLine":5,"endColumn":34},{"ruleId":"117","severity":1,"message":"148","line":6,"column":23,"nodeType":"119","messageId":"120","endLine":6,"endColumn":34},{"ruleId":"117","severity":1,"message":"149","line":8,"column":26,"nodeType":"119","messageId":"120","endLine":8,"endColumn":40},{"ruleId":"117","severity":1,"message":"150","line":9,"column":25,"nodeType":"119","messageId":"120","endLine":9,"endColumn":38},{"ruleId":"117","severity":1,"message":"151","line":10,"column":19,"nodeType":"119","messageId":"120","endLine":10,"endColumn":26},{"ruleId":"117","severity":1,"message":"152","line":22,"column":11,"nodeType":"119","messageId":"120","endLine":22,"endColumn":27},{"ruleId":"117","severity":1,"message":"153","line":4,"column":18,"nodeType":"119","messageId":"120","endLine":4,"endColumn":24},{"ruleId":"117","severity":1,"message":"154","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":23},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'currentCard' is assigned a value but never used.","'setCurrentCard' is assigned a value but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'fetchPostings' is assigned a value but never used.","'handleNotInterested' is assigned a value but never used.","'handleBookmark' is assigned a value but never used.","'handleApply' is assigned a value but never used.","'style' is assigned a value but never used.","'errors' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'fullName' is assigned a value but never used.","'skills' is assigned a value but never used.","'labelButtons' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'tagClassName' is assigned a value but never used.","'setJobTitle' is assigned a value but never used.","'setLocation' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setDatePosted' is assigned a value but never used.","'setTags' is assigned a value but never used.","'tagSpanClassName' is assigned a value but never used.","'setTag' is assigned a value but never used.","'outlineToggle' is defined but never used.","no-global-assign","no-unsafe-negation"]